let themeDots = document.querySelectorAll('.theme-dot');

let theme = localStorage.getItem('theme');

if (theme == null) {
    setTheme('green');
} else {
    setTheme(theme);
}

themeDots.forEach(themeDot => {
    themeDot.addEventListener('click', e => {
        const mode = e.target.dataset.mode;
        setTheme(mode);
    })
})



function setTheme(mode) {
    if (mode == 'light') {
        document.querySelector('#theme-style').href = "default.css";
    }
    if (mode == "blue") {
        document.querySelector('#theme-style').href = "./themes/blue.css";
    }
    if (mode == "green") {
        document.querySelector('#theme-style').href = "./themes/green.css";
    }
    if (mode == "purple") {
        document.querySelector('#theme-style').href = "./themes/purple.css";
    }

    localStorage.setItem('theme', mode);
}


// multilingual just for test
const select = document.querySelector('#langs');
const introduce = document.querySelector("#introduce");
const settingsNote = document.querySelector('#settings-note');
const themeTxt = document.querySelector('#theme-txt');
const jobDet = document.querySelector('#job-det');
const jobDesc = document.querySelector('#job-desc');
const langLabel = document.querySelector('#lang-label');
const moreAbout = document.querySelector('#more-about');
const aboutMe = document.querySelector('#about-me');
const expertise = document.querySelector('#exp');
const expDetail = document.querySelector('#exp-det');
const socialTxt = document.querySelector('#social-txt');
const proj = document.querySelector('#proj');
const postTitle = document.querySelector('#post-title');
const postIntro = document.querySelector('#post-intro');
const readM1 = document.querySelector('#read-m1');
const readM2 = document.querySelector('#read-m2');



let languages = {
    english: {
        introduce: "Hi, I'm Milad Baig",
        settingsNode: "*Theme setting will be saved for your next visit",
        themeText: "personalize theme",
        jobDesc: "What I do?",
        jobDet: "I'm a full-stack web developer.",
        langLabel : "choose a language: " ,
        moreAbout:  "More about me",
        aboutMe: "Back End Developer with a demonstrated history of working in the computer software industry. Skilled in Back-End and Front-End Web Development , Linux System Administration, Responsive Web Design, Web Services API, Git, and JSON Web Token (JWT). Strong engineering professional with a Bachelor's degree in Computer Software Engineering with a focus on AI from Ilam University.",
        expertise: "Top expertise",
        expDetail: "Back-End developer with primary focus on Nodejs + MongoDB:",
        socialTxt: "Find me on social media",
        proj: "Some of my projects: ",
        postTitle: "NodeCafe",
        postIntro: "a simple project with focus on JWT",
        readM1: "Read more",
        readM2: "Read more",
    },
    persian : {
        introduce: "ÿ≥ŸÑÿßŸÖ ŸÖŸÜ ŸÖ€åŸÑÿßÿØŸÖ üëãÔ∏è ",
        settingsNode: "ÿ™ŸÜÿ∏€åŸÖÿßÿ™ ÿ™ŸÖ Ÿà ÿ≤ÿ®ÿßŸÜ ÿ®ÿ±ÿß€å ÿ®ÿßÿ≤ÿØ€åÿØ ŸÖÿ¨ÿØÿØ ÿ¥ŸÖÿß ÿßÿ≤ ÿß€åŸÜ ÿµŸÅÿ≠Ÿá ÿ®ÿßŸÇ€å ÿÆŸàÿßŸáÿØ ŸÖÿßŸÜÿØ",
        themeText: "ÿ¥ÿÆÿµ€å ÿ≥ÿßÿ≤€å ÿ™ŸÖ",
        jobDesc: "⁄©ÿßÿ± ŸÖŸÜ ⁄Ü€åŸáÿü",
        jobDet: "ŸÖŸÜ €åŸá ÿ∑ÿ±ÿßÿ≠ Ÿàÿ®ŸÖ",
        langLabel : "ÿ≤ÿ®ÿßŸÜ ÿ±ÿß ÿßŸÜÿ™ÿÆÿßÿ® ⁄©ŸÜ€åÿØ:",
        moreAbout: "⁄©ŸÖ€å ÿ®€åÿ¥ÿ™ÿ± ÿØÿ±ÿ®ÿßÿ±Ÿá ŸÖŸÜ ",
        aboutMe: "ŸÖŸÜ €åŸá ÿ™Ÿàÿ≥ÿπŸá ÿØŸáŸÜÿØŸá Ÿàÿ®ŸÖ ⁄©Ÿá ÿ™ŸÖÿ±⁄©ÿ≤ŸÖ ÿ±Ÿà€å ÿ®ÿ±ŸÜÿßŸÖŸá ŸÜŸà€åÿ≥€å ÿ≥ŸÖÿ™ ÿ≥ÿ±Ÿàÿ±Ÿá Ÿà ÿØÿ± ÿ≤ŸÖ€åŸÜŸá ÿ™⁄©ŸÜŸàŸÑŸà⁄ò€å Ÿáÿß€å€å ŸÖÿ´ŸÑ ŸÅÿ±ÿßŸÜÿ™ ÿßŸÜÿØ Ÿà ÿ∑ÿ±ÿßÿ≠€å Ÿàÿß⁄©ŸÜÿ¥ ⁄Øÿ±ÿßŸà ŸÖÿØ€åÿ±€åÿ™ ÿ≥€åÿ≥ÿ™ŸÖ Ÿáÿß€å ŸÑ€åŸÜŸà⁄©ÿ≥€å Ÿà ⁄Ø€åÿ™ ŸÖŸáÿßÿ±ÿ™ ÿØÿßÿ±ŸÖ ",
        expertise: "ŸÖŸáÿßÿ±ÿ™ Ÿáÿß€å ŸÖŸÜ",
        expDetail: "ÿ®ÿ±ŸÜÿßŸÖŸá ŸÜŸà€åÿ≥ ÿ≥ŸÖÿ™ ÿ≥ÿ±Ÿàÿ± ÿ®ÿß ÿ™ŸÖÿ±⁄©ÿ≤ ÿ±Ÿà€å NodeJs Ÿà MongoDB : ",
        socialTxt: "ŸÖ€å ÿ™ŸàŸÜ€åÿØ ÿß€åŸÜÿ¨ÿßŸáÿß ŸÖŸÜŸà Ÿæ€åÿØÿß ⁄©ŸÜ€åÿØ",
        proj: "ÿ™ÿπÿØÿßÿØ€å ÿßÿ≤ Ÿæÿ±Ÿà⁄òŸá Ÿáÿß€å ŸÖŸÜ",
        postTitle: "ŸÜŸàÿØ⁄©ÿßŸÅŸá",
        postIntro: "€åŸá Ÿæÿ±Ÿà⁄òŸá ÿ≥ÿßÿØŸá ÿßÿ≠ÿ±ÿßÿ≤ ŸáŸà€åÿ™ ÿ®ÿß JWT",
        readM1: "ÿ®€åÿ¥ÿ™ÿ± ÿ®ÿÆŸàÿßŸÜ€åÿØ",
        readM2: "ÿ®€åÿ¥ÿ™ÿ± ÿ®ÿÆŸàÿßŸÜ€åÿØ",
    }
}

const lang = localStorage.getItem('lang');
setLang(lang);




select.addEventListener("change", e => {
    const lang = e.target.value;
    setLang(lang)
})


function setLang(language){
    
    if(language === 'persian'){
        document.querySelector('body').style.direction = 'rtl'
        introduce.textContent = languages.persian.introduce;
        settingsNote.textContent = languages.persian.settingsNode;
        introduce.style.fontSize = "2rem";
        themeTxt.textContent = languages.persian.themeText;
        jobDesc.textContent = languages.persian.jobDesc;
        jobDet.textContent = languages.persian.jobDet;
        langLabel.textContent = languages.persian.langLabel;
        moreAbout.textContent = languages.persian.moreAbout;
        aboutMe.textContent = languages.persian.aboutMe;
        expertise.textContent = languages.persian.expertise;
        expDetail.textContent = languages.persian.expDetail;
        socialTxt.textContent = languages.persian.socialTxt;
        proj.textContent = languages.persian.proj;
        postIntro.textContent = languages.persian.postIntro;
        postTitle.textContent = languages.persian.postTitle;
        readM1.textContent = languages.persian.readM1;
        readM2.textContent = languages.persian.readM2;
        select.innerHTML = `
        <option value="persian">ŸÅÿßÿ±ÿ≥€å</option>
        <option value="english">English</option>
        `
    }else if(language == 'english'){
        document.querySelector('body').style.direction = 'ltr'
        introduce.textContent = languages.english.introduce;
        introduce.style.fontSize = "56px";
        settingsNote.textContent = languages.english.settingsNode;
        themeTxt.textContent = languages.english.themeText;
        jobDesc.textContent = languages.english.jobDesc;
        jobDet.textContent = languages.english.jobDet;
        langLabel.textContent = languages.english.langLabel;
        moreAbout.textContent = languages.english.moreAbout;
        aboutMe.textContent = languages.english.aboutMe;
        expertise.textContent = languages.english.expertise;
        expDetail.textContent = languages.english.expDetail;
        socialTxt.textContent = languages.english.socialTxt;
        proj.textContent = languages.english.proj;
        postIntro.textContent = languages.english.postIntro;
        postTitle.textContent = languages.english.postTitle;
        readM1.textContent = languages.english.readM1;
        readM2.textContent = languages.english.readM2;
    }
    localStorage.setItem('lang',language);
}

